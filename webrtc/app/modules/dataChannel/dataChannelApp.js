// Generated by CoffeeScript 1.3.3
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(function(require) {
  var $, Backbone, DataChannelApp, DataChannelRouter, DataChannelView, marionette, vent, _;
  $ = require('jquery');
  _ = require('underscore');
  Backbone = require('backbone');
  marionette = require('marionette');
  vent = require('../core/vent');
  DataChannelView = require('./dataChannelView');
  DataChannelRouter = require("./dataChannelRouter");
  DataChannelApp = (function(_super) {

    __extends(DataChannelApp, _super);

    DataChannelApp.prototype.title = "DataChannelApp";

    DataChannelApp.prototype.regions = {
      mainRegion: "#dataChannelContent"
    };

    function DataChannelApp(options) {
      this.onStart = __bind(this.onStart, this);

      this.init = __bind(this.init, this);
      DataChannelApp.__super__.constructor.call(this, options);
      this.vent = vent;
      this.addRegions(this.regions);
      this.router = new DataChannelRouter({
        controller: this
      });
      this.init();
      this.on("start", this.onStart);
    }

    DataChannelApp.prototype.init = function() {
      return this.addInitializer(function() {
        console.log("oh yeah, initializing");
        return this.vent.trigger("app:started", "" + this.title);
      });
    };

    DataChannelApp.prototype.onStart = function() {
      return this.mainRegion.show(new DataChannelView());
    };

    return DataChannelApp;

  })(Backbone.Marionette.Application);
  return DataChannelApp;
});
