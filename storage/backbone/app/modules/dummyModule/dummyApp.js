// Generated by CoffeeScript 1.3.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var $, Backbone, Dummy, DummyCollection, DummyCollectionView, DummyRouter, DummySubApp, marionette, vent, _;
    $ = require('jquery');
    _ = require('underscore');
    Backbone = require('backbone');
    marionette = require('marionette');
    vent = require('../coffeescad.vent');
    DummyCollectionView = require('./dummyView');
    Dummy = require('./dummy');
    DummyCollection = require('./dummyCollection');
    DummyRouter = require("./dummyRouter");
    DummySubApp = (function(_super) {

      __extends(DummySubApp, _super);

      DummySubApp.prototype.title = "DummySubApp";

      DummySubApp.prototype.regions = {
        mainRegion: "#dummyContent"
      };

      function DummySubApp(options) {
        this.saveDummies = __bind(this.saveDummies, this);

        this.listDummies = __bind(this.listDummies, this);

        this.deleteDummy = __bind(this.deleteDummy, this);

        this.saveDummy = __bind(this.saveDummy, this);

        this.newDummy = __bind(this.newDummy, this);

        this.onStart = __bind(this.onStart, this);

        this.init = __bind(this.init, this);
        DummySubApp.__super__.constructor.call(this, options);
        this.vent = vent;
        this.addRegions(this.regions);
        this.router = new DummyRouter({
          controller: this
        });
        this.init();
        this.dummies = new DummyCollection(null, {
          path: "project1"
        });
        this.on("start", this.onStart);
      }

      DummySubApp.prototype.init = function() {
        return this.addInitializer(function() {
          console.log("oh yeah, initializing");
          return this.vent.trigger("app:started", "" + this.title);
        });
      };

      DummySubApp.prototype.onStart = function() {
        return this.dummies.fetch();
      };

      DummySubApp.prototype.newDummy = function() {
        console.log("so you want a new dummy eh ?");
        return this.dummies.create({
          name: Math.random()
        });
      };

      DummySubApp.prototype.saveDummy = function(dummy) {
        return dummy.save();
      };

      DummySubApp.prototype.deleteDummy = function() {
        return console.log("killing a dummy");
      };

      DummySubApp.prototype.listDummies = function() {
        console.log("showing dummies");
        this.dummyView = new DummyCollectionView({
          collection: this.dummies
        });
        return this.mainRegion.show(this.dummyView);
      };

      DummySubApp.prototype.saveDummies = function() {
        return this.dummy.save();
      };

      return DummySubApp;

    })(Backbone.Marionette.Application);
    return DummySubApp;
  });

}).call(this);
