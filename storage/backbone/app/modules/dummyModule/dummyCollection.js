// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var $, DropBoxStorage, Dummy, DummyCollection, boostrap, marionette, _;
    $ = require('jquery');
    _ = require('underscore');
    boostrap = require('bootstrap');
    marionette = require('marionette');
    Dummy = require('./dummy');
    DropBoxStorage = require('./storage/dropboxStorage');
    DummyCollection = (function(_super) {

      __extends(DummyCollection, _super);

      DummyCollection.prototype.model = Dummy;

      DummyCollection.prototype.sync = DropBoxStorage.sync;

      DummyCollection.prototype.path = "";

      function DummyCollection(models, options) {
        DummyCollection.__super__.constructor.call(this, models, options);
        this.path = options.path;
        this.on('reset', function() {
          return console.log("reset collection");
        });
        this.on('fetch', function() {
          return console.log("fetching collection");
        });
      }

      return DummyCollection;

    })(Backbone.Collection);
    return DummyCollection;
  });

}).call(this);
