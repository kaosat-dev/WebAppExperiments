// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  define(function(require) {
    var $, DummyCollectionView, DummyView, boostrap, dummyTemplate, marionette, vent, _;
    $ = require('jquery');
    _ = require('underscore');
    boostrap = require('bootstrap');
    marionette = require('marionette');
    vent = require('../coffeescad.vent');
    dummyTemplate = require("text!./dummy.tmpl");
    DummyView = (function(_super) {

      __extends(DummyView, _super);

      DummyView.prototype.template = dummyTemplate;

      DummyView.prototype.ui = {
        contentEditor: "#contentEditor"
      };

      DummyView.prototype.events = {
        'change textarea ': 'updateContent',
        'click .removeDummy': 'delete',
        'click .saveDummy': function() {
          return vent.trigger("dummy:save", this.model);
        }
      };

      function DummyView(options) {
        DummyView.__super__.constructor.call(this, options);
      }

      DummyView.prototype["delete"] = function() {
        return this.model.destroy();
      };

      DummyView.prototype.updateContent = function(event) {
        return this.model.set("content", this.ui.contentEditor.val());
      };

      return DummyView;

    })(Backbone.Marionette.ItemView);
    DummyCollectionView = (function(_super) {

      __extends(DummyCollectionView, _super);

      DummyCollectionView.prototype.itemView = DummyView;

      function DummyCollectionView(options) {
        DummyCollectionView.__super__.constructor.call(this, options);
        this.collection.bind('reset', this.onCollectionReset);
      }

      DummyCollectionView.prototype.onCollectionReset = function() {
        return console.log("connection reset");
      };

      return DummyCollectionView;

    })(Backbone.Marionette.CollectionView);
    return DummyCollectionView;
  });

}).call(this);
